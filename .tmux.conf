# use C-a, since it's on the home row and easier to hit than C-b
set-option -g prefix C-a
unbind-key C-a
bind-key C-a send-prefix
set -g base-index 1

# Easy config reload
bind-key R source-file ~/.tmux.conf \; display-message "tmux.conf reloaded."

# vi is good
setw -g mode-keys vi

# mouse behavior
set -g mouse on

set-option -g default-terminal screen-256color

bind-key : command-prompt
bind-key r refresh-client
bind-key L clear-history

bind-key space next-window
bind-key bspace previous-window
bind-key enter next-layout

# use vim-like keys for splits and windows
bind-key v split-window -h
bind-key s split-window -v
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

# smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys 'C-\\') || tmux select-pane -l"
bind C-l send-keys 'C-l'

bind-key C-o rotate-window

bind-key + select-layout main-horizontal
bind-key = select-layout main-vertical
set-window-option -g other-pane-height 25
set-window-option -g other-pane-width 80

bind-key a last-pane
bind-key q display-panes
bind-key c new-window
bind-key t next-window
bind-key T previous-window

bind-key [ copy-mode
bind-key ] paste-buffer

# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

set-window-option -g display-panes-time 1500

# Fix escape time on escaped key sequences
set -sg escape-time 0

# Set window notifications
setw -g monitor-activity on
set -g visual-activity off

# Enable native Mac OS X copy/paste
set-option -g default-command "/usr/local/bin/zsh -c 'which reattach-to-user-namespace >/dev/null && exec reattach-to-user-namespace $SHELL -l || exec $SHELL -l'"

# Allow the arrow key to be used immediately after changing windows
set-option -g repeat-time 0

# Reload source file
bind-key r source-file ~/.tmux.conf \; display-message "Configuration reloaded"

set -g base-index 1

set -g status-justify "left"
set -g status "on"
set -g status-left-style "none"
set -g message-command-style "fg=black,bg=yellow"
set -g status-right-style "none"
set -g pane-active-border-style "fg=black"
set -g status-utf8 "on"
set -g status-style "bg=black,none"
set -g message-style "fg=black,bg=yellow"
set -g pane-border-style "fg=black"
set -g status-right-length "100"
set -g status-left-length "100"
setw -g window-status-activity-attr "none"
setw -g window-status-activity-style "fg=white,bg=black,none"
setw -g window-status-separator ""
setw -g window-status-style "fg=blue,bg=blue,none"
set -g status-left "#[fg=white,bg=green] #S #[fg=green,bg=black,nobold,nounderscore,noitalics]"
set -g status-right "#[fg=cyan,bg=black,nobold,nounderscore,noitalics]#[fg=white,bg=cyan] %d.%m.%Y  %H:%M #[fg=black,bg=cyan]#[fg=magenta,bg=black,nobold,nounderscore,noitalics] #[fg=white,bg=magenta] #h "
setw -g window-status-format "#[fg=white,bg=black] #I #[fg=white,bg=black] #W "
setw -g window-status-current-format "#[fg=black,bg=brightred,nobold,nounderscore,noitalics]#[fg=white,bg=brightred] #I:#P #W #[fg=black]#[fg=white,bg=brightred] #{pane_current_path} #[fg=brightred,bg=black,nobold,nounderscore,noitalics]"
